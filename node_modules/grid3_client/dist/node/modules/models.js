"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContractsByAddress = exports.ContractsByTwinId = exports.ContractCancelModel = exports.NodeContractUpdateModel = exports.NameContractGetModel = exports.ContractGetByNodeIdAndHashModel = exports.ContractGetModel = exports.RentContractDeleteModel = exports.RentContractGetModel = exports.RentContractCreateModel = exports.NameContractCreateModel = exports.NodeContractCreateModel = exports.QSFSZDBDeleteModel = exports.QSFSZDBGetModel = exports.QSFSZDBSModel = exports.QSFSDiskModel = exports.ZOSModel = exports.GatewayNameModel = exports.GatewayFQDNModel = exports.DeleteZDBModel = exports.AddZDBModel = exports.ZDBDeleteModel = exports.ZDBGetModel = exports.ZDBSModel = exports.ZDBModel = exports.DeleteWorkerModel = exports.AddWorkerModel = exports.K8SDeleteModel = exports.K8SGetModel = exports.K8SModel = exports.KubernetesNodeModel = exports.DeleteMachineModel = exports.AddMachineModel = exports.MachinesDeleteModel = exports.MachinesGetModel = exports.MachinesModel = exports.MachineModel = exports.NetworkModel = exports.DiskModel = exports.AlgorandTransferModel = exports.AlgorandCreateTransactionModel = exports.AlgorandSignatureModel = exports.AlgorandSignBytesModel = exports.AlgorandAccountAssetsFromAddressModel = exports.AlgorandAccountAssetsFromNameModel = exports.AlgorandAccountGetModel = exports.AlgorandAccountExistModel = exports.AlgorandAccountDeleteModel = exports.AlgorandAccountImportModel = exports.AlgorandAccountCreateModel = void 0;
exports.WalletMessageSignModel = exports.TfchainCreateModel = exports.TfchainWalletDeleteModel = exports.TfchainWalletTransferModel = exports.TfchainWalletBalanceByAddressModel = exports.TfchainWalletBalanceByNameModel = exports.TfchainWalletGetModel = exports.TfchainWalletImportModel = exports.ContractState = exports.ContractStates = exports.FilterOptions = exports.FarmIdFromFarmNameModel = exports.NodeFreeResourcesModel = exports.NodesByFarmIdModel = exports.FarmHasFreePublicIPsModel = exports.NodesGetModel = exports.FarmsGetModel = exports.GatewayNameDeleteModel = exports.GatewayNameGetModel = exports.GatewayFQDNDeleteModel = exports.GatewayFQDNGetModel = exports.StellarWalletGetModel = exports.StellarWalletDeleteModel = exports.StellarWalletTransferModel = exports.StellarWalletBalanceByAddressModel = exports.StellarWalletBalanceByNameModel = exports.StellarWalletImportModel = exports.StellarWalletVerifyModel = exports.StellarWalletSignModel = exports.BalanceTransferModel = exports.BalanceGetModel = exports.KVStoreRemoveModel = exports.KVStoreGetModel = exports.KVStoreSetModel = exports.TwinDeleteModel = exports.TwinGetByAccountIdModel = exports.TwinGetModel = exports.TwinCreateModel = exports.ContractConsumption = void 0;
const algosdk_1 = __importDefault(require("algosdk"));
const class_transformer_1 = require("class-transformer");
const class_validator_1 = require("class-validator");
const deployment_1 = require("../zos/deployment");
const zdb_1 = require("../zos/zdb");
const NameLength = 15;
var ContractStates;
(function (ContractStates) {
    ContractStates["Created"] = "Created";
    ContractStates["Deleted"] = "Deleted";
    ContractStates["OutOfFunds"] = "OutOfFunds";
    ContractStates["GracePeriod"] = "GracePeriod";
})(ContractStates || (ContractStates = {}));
exports.ContractStates = ContractStates;
//TODO: find a way to validate all fields are passed while casting data to any of these classes.
class AlgorandAccountCreateModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountCreateModel.prototype, "name", void 0);
exports.AlgorandAccountCreateModel = AlgorandAccountCreateModel;
class AlgorandAccountImportModel {
    name;
    mnemonic;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountImportModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountImportModel.prototype, "mnemonic", void 0);
exports.AlgorandAccountImportModel = AlgorandAccountImportModel;
class AlgorandAccountAssetsFromNameModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountAssetsFromNameModel.prototype, "name", void 0);
exports.AlgorandAccountAssetsFromNameModel = AlgorandAccountAssetsFromNameModel;
class AlgorandAccountAssetsFromAddressModel {
    address;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountAssetsFromAddressModel.prototype, "address", void 0);
exports.AlgorandAccountAssetsFromAddressModel = AlgorandAccountAssetsFromAddressModel;
class AlgorandCreateTransactionModel {
    sender;
    receiver;
    amount;
    text;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandCreateTransactionModel.prototype, "sender", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandCreateTransactionModel.prototype, "receiver", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], AlgorandCreateTransactionModel.prototype, "amount", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], AlgorandCreateTransactionModel.prototype, "text", void 0);
exports.AlgorandCreateTransactionModel = AlgorandCreateTransactionModel;
class AlgorandTransferModel {
    sender;
    receiver;
    amount;
    text;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandTransferModel.prototype, "sender", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandTransferModel.prototype, "receiver", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNumber)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], AlgorandTransferModel.prototype, "amount", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Object)
], AlgorandTransferModel.prototype, "text", void 0);
exports.AlgorandTransferModel = AlgorandTransferModel;
class AlgorandAccountDeleteModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountDeleteModel.prototype, "name", void 0);
exports.AlgorandAccountDeleteModel = AlgorandAccountDeleteModel;
class AlgorandAccountExistModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountExistModel.prototype, "name", void 0);
exports.AlgorandAccountExistModel = AlgorandAccountExistModel;
class AlgorandAccountGetModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandAccountGetModel.prototype, "name", void 0);
exports.AlgorandAccountGetModel = AlgorandAccountGetModel;
class AlgorandSignatureModel {
    txn;
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", algosdk_1.default.Transaction)
], AlgorandSignatureModel.prototype, "txn", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandSignatureModel.prototype, "name", void 0);
exports.AlgorandSignatureModel = AlgorandSignatureModel;
class AlgorandSignBytesModel {
    msg;
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsHexadecimal)(),
    __metadata("design:type", String)
], AlgorandSignBytesModel.prototype, "msg", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], AlgorandSignBytesModel.prototype, "name", void 0);
exports.AlgorandSignBytesModel = AlgorandSignBytesModel;
class DiskModel {
    name;
    size; // in GB
    mountpoint;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], DiskModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.25),
    __metadata("design:type", Number)
], DiskModel.prototype, "size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], DiskModel.prototype, "mountpoint", void 0);
exports.DiskModel = DiskModel;
class QSFSDiskModel {
    qsfs_zdbs_name;
    name;
    prefix;
    encryption_key;
    cache; // in GB
    minimal_shards;
    expected_shards;
    mountpoint;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], QSFSDiskModel.prototype, "qsfs_zdbs_name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], QSFSDiskModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], QSFSDiskModel.prototype, "prefix", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], QSFSDiskModel.prototype, "encryption_key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.25),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], QSFSDiskModel.prototype, "cache", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], QSFSDiskModel.prototype, "minimal_shards", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(2),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], QSFSDiskModel.prototype, "expected_shards", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], QSFSDiskModel.prototype, "mountpoint", void 0);
exports.QSFSDiskModel = QSFSDiskModel;
class NetworkModel {
    name;
    ip_range;
    addAccess;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], NetworkModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], NetworkModel.prototype, "ip_range", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Boolean)
], NetworkModel.prototype, "addAccess", void 0);
exports.NetworkModel = NetworkModel;
class BaseGetDeleteModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], BaseGetDeleteModel.prototype, "name", void 0);
class MachineModel {
    name;
    node_id;
    disks;
    qsfs_disks;
    public_ip;
    public_ip6;
    planetary;
    cpu;
    memory; // in MB
    rootfs_size; // in GB
    flist;
    entrypoint;
    env;
    ip;
    corex;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], MachineModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], MachineModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => DiskModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], MachineModel.prototype, "disks", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => QSFSDiskModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], MachineModel.prototype, "qsfs_disks", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], MachineModel.prototype, "public_ip", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], MachineModel.prototype, "public_ip6", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], MachineModel.prototype, "planetary", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], MachineModel.prototype, "cpu", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(256),
    __metadata("design:type", Number)
], MachineModel.prototype, "memory", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], MachineModel.prototype, "rootfs_size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsUrl)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], MachineModel.prototype, "flist", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", String)
], MachineModel.prototype, "entrypoint", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Object)
], MachineModel.prototype, "env", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsIP)(),
    __metadata("design:type", String)
], MachineModel.prototype, "ip", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], MachineModel.prototype, "corex", void 0);
exports.MachineModel = MachineModel;
class MachinesModel {
    name;
    network;
    machines;
    metadata;
    description;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], MachinesModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => NetworkModel),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", NetworkModel)
], MachinesModel.prototype, "network", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => MachineModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], MachinesModel.prototype, "machines", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], MachinesModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], MachinesModel.prototype, "description", void 0);
exports.MachinesModel = MachinesModel;
class AddMachineModel extends MachineModel {
    deployment_name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], AddMachineModel.prototype, "deployment_name", void 0);
exports.AddMachineModel = AddMachineModel;
class DeleteMachineModel {
    name;
    deployment_name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], DeleteMachineModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], DeleteMachineModel.prototype, "deployment_name", void 0);
exports.DeleteMachineModel = DeleteMachineModel;
class MachinesGetModel extends BaseGetDeleteModel {
}
exports.MachinesGetModel = MachinesGetModel;
class MachinesDeleteModel extends BaseGetDeleteModel {
}
exports.MachinesDeleteModel = MachinesDeleteModel;
class KubernetesNodeModel {
    name;
    node_id;
    cpu;
    memory; // in MB
    rootfs_size; // in GB
    disk_size; // in GB
    qsfs_disks;
    public_ip;
    public_ip6;
    planetary;
    ip;
    corex;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], KubernetesNodeModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], KubernetesNodeModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], KubernetesNodeModel.prototype, "cpu", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(1024),
    __metadata("design:type", Number)
], KubernetesNodeModel.prototype, "memory", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    __metadata("design:type", Number)
], KubernetesNodeModel.prototype, "rootfs_size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.25),
    __metadata("design:type", Number)
], KubernetesNodeModel.prototype, "disk_size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_transformer_1.Type)(() => QSFSDiskModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], KubernetesNodeModel.prototype, "qsfs_disks", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], KubernetesNodeModel.prototype, "public_ip", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], KubernetesNodeModel.prototype, "public_ip6", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], KubernetesNodeModel.prototype, "planetary", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsIP)(),
    __metadata("design:type", String)
], KubernetesNodeModel.prototype, "ip", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], KubernetesNodeModel.prototype, "corex", void 0);
exports.KubernetesNodeModel = KubernetesNodeModel;
class K8SModel {
    name;
    secret;
    network;
    masters;
    workers;
    metadata;
    description;
    ssh_key; // is not optional as if the user forget it, he will not be able to use the cluster.
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], K8SModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], K8SModel.prototype, "secret", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => NetworkModel),
    (0, class_validator_1.ValidateNested)(),
    __metadata("design:type", NetworkModel)
], K8SModel.prototype, "network", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => KubernetesNodeModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], K8SModel.prototype, "masters", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => KubernetesNodeModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], K8SModel.prototype, "workers", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], K8SModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], K8SModel.prototype, "description", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], K8SModel.prototype, "ssh_key", void 0);
exports.K8SModel = K8SModel;
class K8SGetModel extends BaseGetDeleteModel {
}
exports.K8SGetModel = K8SGetModel;
class K8SDeleteModel extends BaseGetDeleteModel {
}
exports.K8SDeleteModel = K8SDeleteModel;
class AddWorkerModel extends KubernetesNodeModel {
    deployment_name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], AddWorkerModel.prototype, "deployment_name", void 0);
exports.AddWorkerModel = AddWorkerModel;
class DeleteWorkerModel {
    deployment_name;
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], DeleteWorkerModel.prototype, "deployment_name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], DeleteWorkerModel.prototype, "name", void 0);
exports.DeleteWorkerModel = DeleteWorkerModel;
class ZDBModel {
    name;
    node_id;
    mode;
    disk_size; // in GB
    publicNamespace;
    password;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], ZDBModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ZDBModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Transform)(({ value }) => zdb_1.ZdbModes[value]),
    (0, class_validator_1.IsEnum)(zdb_1.ZdbModes),
    __metadata("design:type", String)
], ZDBModel.prototype, "mode", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.25),
    __metadata("design:type", Number)
], ZDBModel.prototype, "disk_size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], ZDBModel.prototype, "publicNamespace", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ZDBModel.prototype, "password", void 0);
exports.ZDBModel = ZDBModel;
class ZDBSModel {
    name;
    zdbs;
    metadata;
    description;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], ZDBSModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_transformer_1.Type)(() => ZDBModel),
    (0, class_validator_1.ValidateNested)({ each: true }),
    __metadata("design:type", Array)
], ZDBSModel.prototype, "zdbs", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], ZDBSModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], ZDBSModel.prototype, "description", void 0);
exports.ZDBSModel = ZDBSModel;
class ZDBGetModel extends BaseGetDeleteModel {
}
exports.ZDBGetModel = ZDBGetModel;
class ZDBDeleteModel extends BaseGetDeleteModel {
}
exports.ZDBDeleteModel = ZDBDeleteModel;
class AddZDBModel extends ZDBModel {
    deployment_name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], AddZDBModel.prototype, "deployment_name", void 0);
exports.AddZDBModel = AddZDBModel;
class DeleteZDBModel extends DeleteWorkerModel {
}
exports.DeleteZDBModel = DeleteZDBModel;
class QSFSZDBSModel {
    name;
    count;
    node_ids;
    disk_size;
    password;
    metadata;
    description;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], QSFSZDBSModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(3),
    __metadata("design:type", Number)
], QSFSZDBSModel.prototype, "count", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.ArrayNotEmpty)(),
    (0, class_validator_1.IsInt)({ each: true }),
    (0, class_validator_1.Min)(1, { each: true }),
    __metadata("design:type", Array)
], QSFSZDBSModel.prototype, "node_ids", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.25),
    __metadata("design:type", Number)
], QSFSZDBSModel.prototype, "disk_size", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], QSFSZDBSModel.prototype, "password", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], QSFSZDBSModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], QSFSZDBSModel.prototype, "description", void 0);
exports.QSFSZDBSModel = QSFSZDBSModel;
class QSFSZDBGetModel extends BaseGetDeleteModel {
}
exports.QSFSZDBGetModel = QSFSZDBGetModel;
class QSFSZDBDeleteModel extends BaseGetDeleteModel {
}
exports.QSFSZDBDeleteModel = QSFSZDBDeleteModel;
class GatewayFQDNModel {
    name;
    node_id;
    fqdn;
    tls_passthrough;
    metadata;
    description;
    backends;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], GatewayFQDNModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], GatewayFQDNModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], GatewayFQDNModel.prototype, "fqdn", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], GatewayFQDNModel.prototype, "tls_passthrough", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], GatewayFQDNModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], GatewayFQDNModel.prototype, "description", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.ArrayNotEmpty)(),
    (0, class_validator_1.IsUrl)({ protocols: ["http", "https"] }, { each: true }),
    __metadata("design:type", Array)
], GatewayFQDNModel.prototype, "backends", void 0);
exports.GatewayFQDNModel = GatewayFQDNModel;
class GatewayFQDNGetModel extends BaseGetDeleteModel {
}
exports.GatewayFQDNGetModel = GatewayFQDNGetModel;
class GatewayFQDNDeleteModel extends BaseGetDeleteModel {
}
exports.GatewayFQDNDeleteModel = GatewayFQDNDeleteModel;
class BaseGatewayNameModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    __metadata("design:type", String)
], BaseGatewayNameModel.prototype, "name", void 0);
class GatewayNameModel extends BaseGatewayNameModel {
    node_id;
    tls_passthrough;
    metadata;
    description;
    backends;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], GatewayNameModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], GatewayNameModel.prototype, "tls_passthrough", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], GatewayNameModel.prototype, "metadata", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], GatewayNameModel.prototype, "description", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.ArrayNotEmpty)(),
    (0, class_validator_1.IsUrl)({ protocols: ["http", "https"] }, { each: true }),
    __metadata("design:type", Array)
], GatewayNameModel.prototype, "backends", void 0);
exports.GatewayNameModel = GatewayNameModel;
class GatewayNameGetModel extends BaseGatewayNameModel {
}
exports.GatewayNameGetModel = GatewayNameGetModel;
class GatewayNameDeleteModel extends BaseGatewayNameModel {
}
exports.GatewayNameDeleteModel = GatewayNameDeleteModel;
class ZOSModel extends deployment_1.Deployment {
    node_id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ZOSModel.prototype, "node_id", void 0);
exports.ZOSModel = ZOSModel;
class NodeContractCreateModel {
    node_id;
    hash;
    data;
    public_ip;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], NodeContractCreateModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], NodeContractCreateModel.prototype, "hash", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", String)
], NodeContractCreateModel.prototype, "data", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(0),
    __metadata("design:type", Number)
], NodeContractCreateModel.prototype, "public_ip", void 0);
exports.NodeContractCreateModel = NodeContractCreateModel;
class NameContractCreateModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], NameContractCreateModel.prototype, "name", void 0);
exports.NameContractCreateModel = NameContractCreateModel;
class RentContractCreateModel {
    nodeId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], RentContractCreateModel.prototype, "nodeId", void 0);
exports.RentContractCreateModel = RentContractCreateModel;
class RentContractGetModel {
    nodeId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], RentContractGetModel.prototype, "nodeId", void 0);
exports.RentContractGetModel = RentContractGetModel;
class RentContractDeleteModel {
    nodeId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", Number)
], RentContractDeleteModel.prototype, "nodeId", void 0);
exports.RentContractDeleteModel = RentContractDeleteModel;
class ContractGetModel {
    id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ContractGetModel.prototype, "id", void 0);
exports.ContractGetModel = ContractGetModel;
class ContractGetByNodeIdAndHashModel {
    node_id;
    hash;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ContractGetByNodeIdAndHashModel.prototype, "node_id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ContractGetByNodeIdAndHashModel.prototype, "hash", void 0);
exports.ContractGetByNodeIdAndHashModel = ContractGetByNodeIdAndHashModel;
class NameContractGetModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], NameContractGetModel.prototype, "name", void 0);
exports.NameContractGetModel = NameContractGetModel;
class NodeContractUpdateModel {
    id;
    hash;
    data;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], NodeContractUpdateModel.prototype, "id", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], NodeContractUpdateModel.prototype, "hash", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsDefined)(),
    __metadata("design:type", String)
], NodeContractUpdateModel.prototype, "data", void 0);
exports.NodeContractUpdateModel = NodeContractUpdateModel;
class ContractCancelModel {
    id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ContractCancelModel.prototype, "id", void 0);
exports.ContractCancelModel = ContractCancelModel;
class ContractsByTwinId {
    twinId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ContractsByTwinId.prototype, "twinId", void 0);
exports.ContractsByTwinId = ContractsByTwinId;
class ContractsByAddress {
    address;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], ContractsByAddress.prototype, "address", void 0);
exports.ContractsByAddress = ContractsByAddress;
class ContractConsumption {
    id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], ContractConsumption.prototype, "id", void 0);
exports.ContractConsumption = ContractConsumption;
class TwinCreateModel {
    ip;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TwinCreateModel.prototype, "ip", void 0);
exports.TwinCreateModel = TwinCreateModel;
class TwinGetModel {
    id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], TwinGetModel.prototype, "id", void 0);
exports.TwinGetModel = TwinGetModel;
class TwinGetByAccountIdModel {
    public_key;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TwinGetByAccountIdModel.prototype, "public_key", void 0);
exports.TwinGetByAccountIdModel = TwinGetByAccountIdModel;
class TwinDeleteModel {
    id;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], TwinDeleteModel.prototype, "id", void 0);
exports.TwinDeleteModel = TwinDeleteModel;
class KVStoreSetModel {
    key;
    value;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], KVStoreSetModel.prototype, "key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], KVStoreSetModel.prototype, "value", void 0);
exports.KVStoreSetModel = KVStoreSetModel;
class KVStoreGetModel {
    key;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], KVStoreGetModel.prototype, "key", void 0);
exports.KVStoreGetModel = KVStoreGetModel;
class KVStoreRemoveModel {
    key;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], KVStoreRemoveModel.prototype, "key", void 0);
exports.KVStoreRemoveModel = KVStoreRemoveModel;
class BalanceGetModel {
    address;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], BalanceGetModel.prototype, "address", void 0);
exports.BalanceGetModel = BalanceGetModel;
class BalanceTransferModel {
    address;
    amount;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], BalanceTransferModel.prototype, "address", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.0000001),
    __metadata("design:type", Number)
], BalanceTransferModel.prototype, "amount", void 0);
exports.BalanceTransferModel = BalanceTransferModel;
class StellarWalletSignModel {
    name;
    content;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], StellarWalletSignModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletSignModel.prototype, "content", void 0);
exports.StellarWalletSignModel = StellarWalletSignModel;
class StellarWalletVerifyModel {
    public_key;
    content;
    signedContent;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletVerifyModel.prototype, "public_key", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletVerifyModel.prototype, "content", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletVerifyModel.prototype, "signedContent", void 0);
exports.StellarWalletVerifyModel = StellarWalletVerifyModel;
class StellarWalletImportModel {
    name;
    secret;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], StellarWalletImportModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletImportModel.prototype, "secret", void 0);
exports.StellarWalletImportModel = StellarWalletImportModel;
class StellarWalletBalanceByNameModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], StellarWalletBalanceByNameModel.prototype, "name", void 0);
exports.StellarWalletBalanceByNameModel = StellarWalletBalanceByNameModel;
class StellarWalletBalanceByAddressModel {
    address;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletBalanceByAddressModel.prototype, "address", void 0);
exports.StellarWalletBalanceByAddressModel = StellarWalletBalanceByAddressModel;
class StellarWalletTransferModel {
    name;
    target_address;
    amount;
    asset;
    memo;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], StellarWalletTransferModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletTransferModel.prototype, "target_address", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.0000001),
    __metadata("design:type", Number)
], StellarWalletTransferModel.prototype, "amount", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], StellarWalletTransferModel.prototype, "asset", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", String)
], StellarWalletTransferModel.prototype, "memo", void 0);
exports.StellarWalletTransferModel = StellarWalletTransferModel;
class StellarWalletDeleteModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], StellarWalletDeleteModel.prototype, "name", void 0);
exports.StellarWalletDeleteModel = StellarWalletDeleteModel;
class StellarWalletGetModel extends StellarWalletDeleteModel {
}
exports.StellarWalletGetModel = StellarWalletGetModel;
class TfchainWalletGetModel {
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    __metadata("design:type", String)
], TfchainWalletGetModel.prototype, "name", void 0);
exports.TfchainWalletGetModel = TfchainWalletGetModel;
class TfchainWalletImportModel {
    name;
    mnemonics;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    __metadata("design:type", String)
], TfchainWalletImportModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TfchainWalletImportModel.prototype, "mnemonics", void 0);
exports.TfchainWalletImportModel = TfchainWalletImportModel;
class TfchainWalletDeleteModel extends TfchainWalletGetModel {
}
exports.TfchainWalletDeleteModel = TfchainWalletDeleteModel;
class TfchainWalletBalanceByNameModel extends TfchainWalletGetModel {
}
exports.TfchainWalletBalanceByNameModel = TfchainWalletBalanceByNameModel;
class TfchainWalletBalanceByAddressModel {
    address;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TfchainWalletBalanceByAddressModel.prototype, "address", void 0);
exports.TfchainWalletBalanceByAddressModel = TfchainWalletBalanceByAddressModel;
class TfchainWalletTransferModel {
    name;
    target_address;
    amount;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    (0, class_validator_1.MaxLength)(NameLength),
    __metadata("design:type", String)
], TfchainWalletTransferModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], TfchainWalletTransferModel.prototype, "target_address", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.Min)(0.0000001),
    __metadata("design:type", Number)
], TfchainWalletTransferModel.prototype, "amount", void 0);
exports.TfchainWalletTransferModel = TfchainWalletTransferModel;
class TfchainCreateModel {
    name;
    ip;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    __metadata("design:type", String)
], TfchainCreateModel.prototype, "name", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsIP)(),
    __metadata("design:type", String)
], TfchainCreateModel.prototype, "ip", void 0);
exports.TfchainCreateModel = TfchainCreateModel;
class WalletMessageSignModel {
    message;
    name;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], WalletMessageSignModel.prototype, "message", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    (0, class_validator_1.IsAlphanumeric)(),
    __metadata("design:type", String)
], WalletMessageSignModel.prototype, "name", void 0);
exports.WalletMessageSignModel = WalletMessageSignModel;
class FarmsGetModel {
    page; // default 1
    maxResult; // default 50
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], FarmsGetModel.prototype, "page", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    (0, class_validator_1.IsOptional)(),
    __metadata("design:type", Number)
], FarmsGetModel.prototype, "maxResult", void 0);
exports.FarmsGetModel = FarmsGetModel;
class NodesGetModel extends FarmsGetModel {
}
exports.NodesGetModel = NodesGetModel;
class FarmHasFreePublicIPsModel {
    farmId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], FarmHasFreePublicIPsModel.prototype, "farmId", void 0);
exports.FarmHasFreePublicIPsModel = FarmHasFreePublicIPsModel;
class NodesByFarmIdModel extends FarmHasFreePublicIPsModel {
}
exports.NodesByFarmIdModel = NodesByFarmIdModel;
class ContractState {
    state;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsEnum)(ContractStates, { each: true }),
    __metadata("design:type", Array)
], ContractState.prototype, "state", void 0);
exports.ContractState = ContractState;
class NodeFreeResourcesModel {
    nodeId;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], NodeFreeResourcesModel.prototype, "nodeId", void 0);
exports.NodeFreeResourcesModel = NodeFreeResourcesModel;
class FarmIdFromFarmNameModel {
    farmName;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsString)(),
    (0, class_validator_1.IsNotEmpty)(),
    __metadata("design:type", String)
], FarmIdFromFarmNameModel.prototype, "farmName", void 0);
exports.FarmIdFromFarmNameModel = FarmIdFromFarmNameModel;
class FilterOptions {
    cru;
    mru; // GB
    sru; // GB
    hru; // GB
    publicIPs;
    accessNodeV4;
    accessNodeV6;
    gateway;
    farmId;
    farmName;
    country;
    city;
    dedicated;
    availableFor;
    page;
}
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Min)(0),
    __metadata("design:type", Number)
], FilterOptions.prototype, "cru", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Min)(0),
    __metadata("design:type", Number)
], FilterOptions.prototype, "mru", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Min)(0),
    __metadata("design:type", Number)
], FilterOptions.prototype, "sru", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.Min)(0),
    __metadata("design:type", Number)
], FilterOptions.prototype, "hru", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], FilterOptions.prototype, "publicIPs", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], FilterOptions.prototype, "accessNodeV4", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], FilterOptions.prototype, "accessNodeV6", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], FilterOptions.prototype, "gateway", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    (0, class_validator_1.Min)(1),
    __metadata("design:type", Number)
], FilterOptions.prototype, "farmId", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], FilterOptions.prototype, "farmName", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], FilterOptions.prototype, "country", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsString)(),
    __metadata("design:type", String)
], FilterOptions.prototype, "city", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsBoolean)(),
    __metadata("design:type", Boolean)
], FilterOptions.prototype, "dedicated", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], FilterOptions.prototype, "availableFor", void 0);
__decorate([
    (0, class_transformer_1.Expose)(),
    (0, class_validator_1.IsOptional)(),
    (0, class_validator_1.IsInt)(),
    __metadata("design:type", Number)
], FilterOptions.prototype, "page", void 0);
exports.FilterOptions = FilterOptions;
